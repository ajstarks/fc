deck
	canvas 1920 1080
	ts=4
	ls=ts*0.4
	ms=1.5
	
	left=5
	codeleft=left+27
	top=90
	bgcolor="rgb(50,50,50)"
	fgcolor="rgb(250,250,250)"

	// Title page
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "fc: a high-level canvas API for the fyne toolkit" 50 90 ts
		image "images/fyne-clients0.png"  50 45 2863 1612 50
		ctext "Anthony Starks      @ajstarks" 50 3 ls

	eslide

	// Elements
	slide bgcolor fgcolor
		op=40
		coordcolor="orangered"
		coordsize=1.5
		elcolor=fgcolor
		rect 50 95 100 20 "black"
		ctext "Elements" 50 top ts
		text "Text"  5 70 4
		ctext "CText" 50 70 4
		etext "EText" 95 70 4
		circle 5 70 coordsize coordcolor op
		circle 50 70 coordsize coordcolor op
		circle 95 70 coordsize coordcolor op

		circle 25 50 10 elcolor
		circle 25 50 coordsize coordcolor op
		ctext "circle" 25 35 2

		circle 45 60 coordsize coordcolor op
		circle 60 40 coordsize coordcolor op
		line   45 60 60 40 0.5 elcolor
		ctext "line" 50 35 2

		rect 75 50 15 10 elcolor 
		circle 75 50 coordsize coordcolor op
		ctext "rectangle" 75 35 2

		cimage "images/earth.jpg" "image" 50 20 200 200
		circle 50 20 coordsize coordcolor op
	eslide

	// grid
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "Percentage-based Grid" 50 top ts
		include "showgrid.dsh"
	eslide


	// Objects on the grid
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "Using the Percentage-based Grid" 50 top ts

		include "showgrid.dsh"
		
		circle 40 45 10 fgcolor 40
		circle 40 45 1 coordcolor 60
		ctext "(50, 50)" 40 40 2
		ctext "(90, 90)" 60 55 2
		ctext "(10, 10)" 20 22 2
		ctext "(30, 70)" 30 57 2

		line 20 25 30 55 0.5 fgcolor 40
		circle 20 25 1 coordcolor 60
		circle 30 55 1 coordcolor 60

		text "Rect(90, 80, ...)"   70 65 2
		text "Circle(50, 50, ...)" 70 45 2
		text "Line(10, 10, 30, 70, ...)" 70 25 2
	eslide


	// % Methods
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "Percentage-based Methods" 50 top ts

		list left 80 ls
			li "Make a new canvas"
			li ""
			li "Place text, left-aligned"
			li "Place centered text"
			li "Place end-aligned text"
			li "Obtain the text width"
			li ""
			li "Make a circle centered (x,y)"
			li "Rectangle with corner at (x,y)"
			li "Rectangle centered at (x,y)"
			li "Draw line from (x1,y) to (x2,y2)"
			li "Place an image centered at (x,y)"
			li ""
			li "Display and run"
		elist

		list codeleft 80 ls "mono"
			li "NewCanvas(name string, w, h int) Canvas"
			li ""
			li "Text(x, y, size float64, s string, fill color.RGBA)"
			li "CText(x, y, size float64, s string, fill color.RGBA)"
			li "EText(x, y, size float64, s string, fill color.RGBA)"
			li "TextWidth(s string, size float64) float64"
			li ""
			li "Circle(x, y, r float64, fill color.RGBA)"
			li "CornerRect(x, y, w, h float64, fill color.RGBA)"
			li "Rect(x, y, w, h float64, fill color.RGBA)"
			li "Line(x1, y1, x2, y2, size float64, stroke color.RGBA)"
			li "Image(x, y float64, w, h int, name string)"
			li ""
			li "EndRun()"
		elist
	eslide

	// Convenience methods
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "Convenience methods" 50 top ts

		list left 60 ls
			li "Lookup colors by name"
			li "Map one range into another"
			li "Polar to Cartesian coordinates"
			li "Convert degrees to radians"

		elist
		list codeleft 60 ls "mono"
			li "ColorLookup(s string) color.RGBA"
			li "MapRange(value, low1, high1, low2, high2 float64) float64"
			li "Polar(x, y, r, angle float64) (float64, float64)"
			li "Radians(deg float64) float64"
		elist
	eslide

	// Abs Methods
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "Absolute Coordinate Methods" 50 top ts

		list left 80 ls
			li "Place text, left-aligned"
			li "Place centered text"
			li "Place end-aligned text"
			li ""
			li "Make a circle centered (x,y)"
			li "Rectangle with corner at (x,y)"
			li "Rectangle centered at (x,y)"
			li "Draw line from (x1,y) to (x2,y2)"
			li "Image upper-left corner at (x,y)"
			li "Image centered at (x,y)"
			li ""
			li "New app context"
			li "Display and run"
		elist

		list codeleft 80 ls "mono"
			li "AbsText(c *fyne.Container,x,y int,s string,size int,fill color.RGBA)"
			li "AbsTextMid(c *fyne.Container,x,y int,s string,size int,fill color.RGBA)"
			li "AbsTextEnd(c *fyne.Container,x,y int,s string,size int,fill color.RGBA)"
			li ""
			li "AbsCircle(c *fyne.Container,x,y,r int,fill color.RGBA)"
			li "AbsCornerRect(c *fyne.Container,x,y,w,h int,fill color.RGBA)"
			li "AbsRect(c *fyne.Container,x,y,w,h int,fill color.RGBA)"
			li "AbsLine(c *fyne.Container,x1,y1,x2,y2 int,size float32,stroke color.RGBA)"
			li "AbsCornerImage(c *fyne.Container,x,y,w,h int,name string)"
			li "AbsImage(c *fyne.Container,x,y,w,h int,name string)"
			li ""
			li "AbsStart(name string,w,h int) (fyne.Window,*fyne.Container)"
			li "AbsEndRun(window fyne.Window,c *fyne.Container,w,h int)"			
		elist
	eslide

	// hello, world
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "hello, (fc) world" 50 top ts
		image "images/hello.png" 78 45 802 830
		textfile "code/hello.go" left 80 ms "mono"
	eslide

	// fc/chart
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "fc/chart:" 50 top ts
		image "images/sine-cosine.png" 50 42 1702 1730 50
 	eslide


	// fc/chart data
	slide bgcolor fgcolor
		rect 50 95 100 20 "black"
		ctext "fc/chart: data structures" 50 top ts
		textfile "code/chartbox.go" left 80 2 "mono"
 	eslide
edeck